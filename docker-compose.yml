version: '3.5'

services:
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    env_file:
      - .env
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - ./docker_compose_storage/postgres-data:/var/lib/postgresql/data
    networks:
      ai_chat-backend:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "16543:80"
    depends_on:
      - postgres-db
    networks:
      ai_chat-backend:

  redis-cache:
    image: redis/redis-stack:latest
    container_name: redis-cache
    command: redis-stack-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./docker_compose_storage/redis-data:/data
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      ai_chat-backend:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    restart: on-failure
    depends_on:
      postgres-db:
        condition: service_healthy
      redis-cache:
        condition: service_started
    container_name: app
    command: ["./wait-for-it.sh", "./main"]
    volumes:
      - ./docker_compose_storage/app-data:/go/src/Chat-Backend/public
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PORT=${DB_PORT}
      - DB_PASSWORD=${DB_PASSWORD}
    env_file:
      - .env
    networks:
      ai_chat-backend:

networks:
  ai_chat-backend:
    name: ai_chat-backend
